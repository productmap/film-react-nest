name: film-nest-prod

services:
  backend:
    image: cr.yandex/${YC_REGISTRY_ID}/film-react-nest-backend:${IMAGE_TAG:-latest}
    container_name: backend
    restart: unless-stopped
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    volumes:
      - logs_data:/app/logs

  postgres:
    container_name: postgres
    image: postgres:16.4
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    container_name: mongo
    image: mongo:6.0
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: cr.yandex/${YC_REGISTRY_ID}/film-react-nest-nginx:${IMAGE_TAG:-latest}
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped


volumes:
  pg_data:
  mongo_data:
  logs_data:
