# Этот Dockerfile предназначен для сборки единого production-образа,
# содержащего и собранный фронтенд, и настроенный Nginx для его раздачи.

# ---- Этап 1: Сборка фронтенда (Builder) ----
# Используем pnpm, как и в бэкенде, для консистентности
FROM node:22-slim AS frontend-builder

WORKDIR /app

# Устанавливаем pnpm
RUN corepack enable

# Копируем файлы для установки зависимостей фронтенда.
# Контекст сборки будет корневая папка проекта.
COPY frontend/package.json frontend/pnpm-lock.yaml ./

# Устанавливаем зависимости. --frozen-lockfile гарантирует идентичную установку в CI/CD.
RUN pnpm install --frozen-lockfile

# Копируем исходный код фронтенда
COPY frontend/ ./

# Переменные окружения для сборки будут переданы через build args
ARG VITE_API_URL=/api
ARG VITE_CDN_URL=/content/afisha
ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_CDN_URL=${VITE_CDN_URL}

# Собираем статические файлы
RUN pnpm run build

# ---- Этап 2: Продакшен Nginx ----
FROM nginx:latest

# Копируем специальную конфигурацию Nginx для продакшена
COPY nginx/nginx.prod.conf /etc/nginx/conf.d/default.conf

# Копируем собранные статические файлы фронтенда из этапа сборки
COPY --from=frontend-builder /app/dist /usr/share/nginx/html

# Копируем статичные изображения (афиша), которые раньше раздавались бэкендом.
# В проде Nginx справится с этим гораздо эффективнее.
COPY backend/public/afisha /usr/share/nginx/html/content/afisha

EXPOSE 80
EXPOSE 443

CMD ["nginx", "-g", "daemon off;"]